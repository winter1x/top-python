Оценивается при наличии пул реквеста

Требования к оформлению теоретических вопросов:
Максимальные баллы за теорию при соответствии общим оформлениям отчета по 7.32-2017 (размер, шрифт, отступ, интервал, по ширине, выделения, оглавление) 
Результат предоставить в ворде

1. Предмет теории надежности.
2. Основные понятия и определения теории надежности.
3. Понятие «отказ» и классификация отказов информационных систем.
4. Зависимость надежности от времени.
7. Показатели надежности информационных систем.
10. Надежность восстанавливаемых систем.
11. Надежность невосстанавливаемых систем.
20. Классификация ошибок программного обеспечения.
26. Зависимость надежности от времени.
29. Показатели надежности вычислительных систем.
30. Специфика информационной системы как объекта исследования надежности.


Требования к оформлению практики:
Соответствие принципам чистого кода

Критерии оценивания: 
теория - 50
задание - 50

0-39 - 2
40-59 - 3
60-79 - 4
80-100 - 5

Вам предоставлен модуль analytics.py, содержащий набор функций для анализа заказов в интернет-магазине. Эти функции выполняют различные действия: фильтрацию заказов по статусу, подсчёт общей выручки, подсчёт заказов по пользователям и валидацию структуры данных о заказах.

Создайте файл test_analytics.py, в котором
Напишите набор автотестов с использованием библиотеки pytest.

Включите в проект:
как минимум одну фикстуру, содержащую список заказов.
тесты для каждой из четырёх функций из analytics.py.
позитивные и негативные сценарии (в том числе тесты, в которых ожидаются исключения).
assert-проверки значений, типов и структуры выходных данных.

Что должно быть протестировано:
1. filter_orders(orders, status)
Фильтрация заказов по статусу
Проверка на корректный результат
Проверка на исключение при неверном типе аргумента status

2. calculate_total_revenue(orders)
Корректный подсчёт суммы выручки
Проверка результата для пустого списка
Проверка исключения при некорректном заказе (отрицательная сумма)

3. count_orders_by_user(orders)
Подсчёт количества заказов по каждому пользователю
Поведение при пустом списке заказов

4. validate_order(order)
Проверка валидных данных (корректный заказ)
Проверка на отсутствие обязательных полей
Проверка на некорректный тип или значение отдельных полей (user, amount)

оценнивается при наличии примерно такого скриншота https://disk.yandex.ru/i/Qj97P0I-By3pAw